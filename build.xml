<?xml version="1.0" encoding="UTF-8"?>
<project name="Spress" default="test">
    <property name="dir.output" value="${project.basedir}/build" />
    <property name="cmd.composer" value="composer" />
    <property name="cmd.box" value="box" />

    <target name="test" description="Run unit tests">
        <exec passthru="true" command="phpunit" checkReturn="true" />
    </target>

    <target name="deploy" depends="check-git-branch-status,prepare,clean-vendors,update-vendors,test,package-phar,package-zip" />

    <target name="package-phar">
        <echo msg="Creating a phar file" />
        <exec passthru="true" command="${cmd.box} build" checkreturn="true"/>
    </target>

    <target name="package-zip">
        <echo msg="Creating a zip file" />
        <zip destfile="${dir.output}/spress.zip" prefix="spress/">
            <fileset dir=".">
                <exclude name="tests/**" />
                <exclude name="phpunit.xml.dist" />
                <exclude name="build.xml" />
                <exclude name=".travis.yml" />
                <exclude name="split-branch.sh" />
            </fileset>
        </zip>
    </target>

    <target name="clean">
        <delete dir="${dir.output}" />
    </target>

    <target name="clean-vendors">
        <delete dir="${project.basedir}/vendor"/>
        <delete dir="${project.basedir}/app/templates"/>
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${dir.output}"/>
    </target>

    <target name="coverage" depends="prepare">
        <exec passthru="true" command="phpunit --coverage-html=${dir.output}/coverage" />
    </target>

    <target name="view-coverage">
        <exec passthru="true" command="open ${dir.output}/coverage/index.html" />
    </target>

    <target name="update-vendors">
        <exec passthru="true" command="${cmd.composer} update --no-dev" checkreturn="true"/>
    </target>

    <target name="check-git-branch-status">
        <exec command="git status -s" outputProperty="git.status" />
        <if>
            <equals arg1="${git.status}" arg2="" trim="true"/>
            <then>
                <echo>Working directory ok</echo>
            </then>
            <else>
                <echo>${git.status}</echo>
                <fail message="Working directory isn't clean." />
            </else>
        </if>
    </target>
</project>
